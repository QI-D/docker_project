openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: "http://localhost:8090"
info:
  description: API for an inventory management system
  version: "1.0.0"
  title: Inventory Management System API
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
paths:
  /expense:
    post:
      tags:
        - expense
      summary: Place an order
      operationId: app.placeOrder
      description: Placing an order through the system
      responses:
        "201":
          description: "Order Placed"
        "400":
          description: "invalid input, object invalid"
        "401":
          description: "Order has already been placed"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/expenseEvent"
        description: Order to be placed

  /writeUser:
    post:
      tags:
        - createuser
      summary: createuser
      description: createuser
      operationId: app.write_user
      requestBody:
        description: createuser
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"
      responses:
        "200":
          description: user create
        "400":
          description: invalid input, object invalid

  /getUser:
    get:
      tags:
        - getuser
      summary: get username and password
      description: get username and password
      operationId: app.get_user
      parameters:
        - name: username
          in: query
          description: Limits user
          schema:
            type: string
      responses:
        "200":
          description: get user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user"
        "400":
          description: invalid input, object invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /getExpense:
    get:
      tags:
        - getExpense
      summary: Get the expenses
      operationId: app.getExpense
      description: Getting the expenses
      parameters:
        - name: timestamp
          in: query
          description: Limits the number of items on a page
          schema:
            type: string
            format: date-time
            example: "2016-08-29T09:12:33.001Z"
      responses:
        "200":
          description: Successfully returned a list of expenses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/expenseEvent"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

components:
  schemas:
    user:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      description: user credentials
    expenseEvent:
      type: object
      required:
        - order_id
        - item_id
        - item_name
        - quantity
        - price
        - timestamp
      properties:
        order_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        item_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        item_name:
          type: string
          example: Gala Apple
        quantity:
          type: integer
        price:
          type: number
        timestamp:
          format: date-time
          example: "2016-08-29T09:12:33.001Z"
        trace_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
